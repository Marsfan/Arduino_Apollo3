on:
  push:
    branches:
      - spoof-release-candidate

name: Generate Variants

jobs:
  build:
    name: Generate Variants
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2.3.1
        with:
          path: arduino-apollo3
          fetch-depth: 0

      - name: build variant libs
        id: buildvariants
        uses: oclyke-actions/compile-mbed-projects@v0.0.0
        with:
          jobs: |
            [
              {"name": "artemis-dev-kit-lib", "config": {"base": "compile --library --source=mbed-os", "tgt": "SFE_ARTEMIS_DK", "tool": "GCC_ARM"}, "user": {"variant": {"name": "ARTEMIS_DEV_KIT", "loc": "variants/SFE_ARTEMIS_DK"}}},
              {"name": "artemis-redboard-atp-lib", "config": {"base": "compile --library --source=mbed-os", "tgt": "SFE_ARTEMIS_ATP", "tool": "GCC_ARM"}, "user": {"variant": {"name": "ARTEMIS_ATP", "loc": "variants/SFE_ARTEMIS_ATP"}}}
            ]
          mbed: |
            {"url": "https://github.com/sparkfun/mbed-os-ambiq-apollo3", "branch": "ambiq-apollo3-dev"}

      - name: check out staging branch
        run: |
          cd arduino-apollo3
          git fetch --all
          git pull --all
          git checkout spoof-staging
          git config --global user.email "arduino-apollo3-builder@sparkfun.com"
          git config --global user.name "arduino-apollo3-builder"
          cd ${GITHUB_WORKSPACE}

      - name: copy libs to variants
        run: |
          cd arduino-apollo3

          jobs='${{ steps.buildvariants.outputs.jobs }}'
          job_count=0

          for row in $(echo ${jobs} | jq -r '.[] | @base64'); do
            name="$(echo ${row} | base64 --decode | jq -r '.name')"
            loc="$(echo ${row} | base64 --decode | jq -r '.loc')"
            config="$(echo ${row} | base64 --decode | jq -r '.config')"
            user="$(echo ${row} | base64 --decode | jq -r '.user')"

            tgt="$(echo ${config} | jq -r -c '.tgt')"
            tool="$(echo ${config} | jq -r -c '.tool')"

            echo ""
            echo "${job_count}:"
            echo "'${name}'"

            lib_src="./../${loc}/BUILD/libraries/libmbed-os/${tgt}/${tool}/libmbed-os.a"
            lib_dest="./$(echo ${user} | jq -r '.variant.loc')/mbed/libmbed-os.a"
            echo "copying '${lib_src}' to '${lib_dest}'"
            mkdir -p $(dirname $lib_dest)
            cp $lib_src $lib_dest
            
            git add ${lib_dest}

            job_count="$((job_count + 1))"
          done

          git commit -a -m "generated mbed libs"
          cd ${GITHUB_WORKSPACE}

      - name: rebase staging branch to release-candidate
        run: |
          cd arduino-apollo3
          git checkout spoof-staging
          git rebase origin/spoof-release-candidate
          cd ${GITHUB_WORKSPACE}

      - name: push changes
        run: |
          cd arduino-apollo3
          git push origin
          cd ${GITHUB_WORKSPACE}
