on:
  push:
    # branches:
    #   - master

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v1 # currently only v1 supports submodules
        # with:
        #   # submodules: recursive
        #   # fetch-depth: 0
      - name: update variants
        id: updatevariants
        # run: echo "I would update the variants here"
        uses: oclyke-actions/compile-mbed-projects@v0.0.0
        with:
          jobs: |
            [
              {"name": "artemis-dev-kit-lib", "cmd": "compile -m SFE_ARTEMIS_DK -t GCC_ARM --library --source=mbed-os"},
              {"name": "artemis-redboard-atp-lib", "cmd": "compile -m SFE_ARTEMIS_ATP -t GCC_ARM --library --source=mbed-os"}
            ]
          mbed: |
            {"url": "https://github.com/sparkfun/mbed-os-ambiq-apollo3", "branch": "ambiq-apollo3-dev"}
      - name: echo results from variant updates
        # run: 'echo "update variants output jobs: ${{ steps.updatevariants.outputs.jobs }}"'
        run: echo "${{steps.updatevariants.output.jobs}}" | jq '.'
      # - name: changelog
      #   id: changelog
      #   uses: scottbrenner/generate-changelog-action@1.0.0
      #   env:
      #     REPO: ${{ github.repository }}
      - name: create release
        id: create_release
        # run: echo "placeholder for release creation ${{steps.changelog.outputs.changelog}}"
        run: echo "placeholder for release creation ${{steps.changelog.outputs.changelog}}"
        # uses: actions/create-release@latest
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with:
        #   tag_name: ${{ github.ref }}
        #   release_name: Release ${{ github.ref }}
        #   body: |
        #     ${{ steps.changelog.outputs.changelog }}
        #   draft: false
        #   prerelease: false
